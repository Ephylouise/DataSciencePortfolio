---
title: 'DTSC 650: Data Analytics In R'
subtitle: 'CodeGrade Assignments Part 1: msleep'
output: html_notebook
editor_options:
  chunk_output_type: inline
---

## Student Info

```         
Name: Steph Roberts
Term: 2024SP1
Date: 24JAN2024
```

------------------------------------------------------------------------

## General Instructions

------------------------------------------------------------------------

### Name of File

Name your assignment file **`msleep`**. This is a quarto "markdown" file, which has the file has the extension '.qmd'.

------------------------------------------------------------------------

### Allowable packages

The only allowable package is `tidyverse`. You should not use any other packages as CodeGrade is not set up to accept them on this assignment.

-   If the allowable packages are not installed on your local computer, you'll need to do a one-time installation *from the Console Window in RStudio* for each package like this:\
    **`install.packages('<package name>')`**\
    *Do not attempt to install packages in code that you submit to CodeGrade.*

-   Note: installing the entire tidyverse with `install.packages('tidyverse')` from the Console Window will save you from having to install any of the tidyverse's individual packages in the future.

-   In your code, load the package's library like this: **`library(<library name>)`**

------------------------------------------------------------------------

### Data Set

The data set for this assignment is called **`msleep`**. See the [msleep documentation](https://ggplot2.tidyverse.org/reference/msleep.html) for more info.

------------------------------------------------------------------------

### Pipe Notation

You may use the `tidyverse` pipe **`%>%`** or the new base R pipe **`|>`**. See [here](https://www.tidyverse.org/blog/2023/04/base-vs-magrittr-pipe/) for a comparison.

You are expected to use pipe notation in all of the CodeGrade assignments. Although there are alternate ways to filter, subset, and summarize data sets, using the pipe creates more readable code and is an important skill to develop.

------------------------------------------------------------------------

### Rounding requirement

-   Round all float/dbl values to two decimal places.

------------------------------------------------------------------------

### Dataframe vs. Tibble

Typically, in CodeGrade assignments, we expect output to be dataframes, not tibbles, unless otherwise noted.

------------------------------------------------------------------------

### Inline vs. Console

By default, RStudio uses Inline output (Notebook mode) on R Markdown documents. You can switch between Inline and Console output modes by clicking the gear button in the editor toolbar (to the left of the green "insert new code chunk") and choosing either "Chunk Output Inline" or "Chunk Output in Console". See [here](https://bookdown.org/yihui/rmarkdown/notebook.html#creating-a-notebook) for more information.

Console output can be useful for debugging since that's how your solutions will appear to CodeGrade. You can type code directly into the Console as well and run it from there. For example: after you run the Q0 example code inline (shown below), you can type `Q0<ENTER>` in the Console to see how the output appears to CodeGrade.

------------------------------------------------------------------------

### Preliminaries

```{r}
### It's always a good idea when working in RStudio to start with a clean environment. 
### Clear objects from the environment memory that may be leftoever from previous versions of your code or other assignments by running the following line:
rm(list = ls())

### Load Libraries
library(tidyverse) 

### There may be warning messages about some of the packages. You can ignore these. Feel free to search online for the explanations for these messages.
```

### Before attempting the questions (Q1-Q5) below, familiarize yourself with the `msleep` dataset. Run the following block.

```{r}
msleep

```

### Q0: An Example

Suppose the question is:\
**Find the median total sleep time for all carnivores by conservation type. Note that conservation has NAs; you should remove them. Include the name of the animal along with its conservation status and median sleep time (named sleep_time_med) in the answer and store it as a data frame. Round the median to two decimal places, and store it in Q0.**

The following code block provides the solution:

```{r}
### Do not edit the following line. It is used by CodeGrade.
# CG Q0 # 

Q0 <- msleep %>%
  select(name, vore, conservation, sleep_total) %>%
  filter(vore=="carni", !is.na(conservation)) %>% 
  group_by(conservation) %>% 
  summarize(sleep_time_med = round(median(sleep_total, na.rm=TRUE),2)) %>%
  as.data.frame()
Q0
```

For the above code block, run the entire cell with the green arrow on the right.

We recommend highlighting each section of this solution and investigating the output to understand what the pipe and code are doing. In other words, use your cursor to highlight *`msleep %>% select(name, vore, conservation, sleep_total)`* in the block above, press CTRL + ENTER (on a PC), and see what the output is. This will help you understand the pipe and debug your code.

We expect your solutions to look like the above code block, where you are using the pipe operator (not other approaches) and, in some cases, finding the solution in just one line of code.

------------------------------------------------------------------------

## Questions

------------------------------------------------------------------------

### Q1 What is the variance in total sleep for carnivores whose `conservation` status is `lc`?

-   Your solution should be a dataframe assigned to Q1. The variance column should be named `var`. In the Console Window the output should look something like this:

```         
      var
1 [value]
```

```{r}
### Do not edit the following line. It is used by CodeGrade.
# CG Q1 # 

### TYPE YOUR CODE BELOW ###

Q1 <- msleep |> 
  filter(vore == "carni",
         conservation == "lc") |> 
  summarize(var = round(var(sleep_total, na.rm = TRUE),2)) |> 
  as.data.frame()

### VIEW OUTPUT ###
Q1

```

### Q2 What rodent (order Rodentia) has the highest total sleep/rem sleep ratio?

-   Your solution should be a dataframe assigned to Q2. In the Console Window the output should look something like this:

```         
           name
1 [animal name]
```

```{r}
### Do not edit the following line. It is used by CodeGrade.
# CG Q2 # 

### TYPE YOUR CODE BELOW ###

Q2 <- msleep |> 
  select(order, sleep_rem, sleep_total, name) |> 
  filter(order == "Rodentia") |> 
  mutate(rem_ratio = sleep_total/sleep_rem) |> 
  slice_max(rem_ratio, n = 1)  |> 
  select(name) |> 
  as.data.frame()

### VIEW OUTPUT ###
Q2

```

### Q3 How many primates have a bodyweight/brainwt ratio greater than 100?

-   Your solution should be a dataframe assigned to Q3.

```{r}
### Do not edit the following line. It is used by CodeGrade.
# CG Q3 # 

### TYPE YOUR CODE BELOW ###

Q3 <- msleep |> 
  filter(order == "Primates",
         bodywt/brainwt >100) |> 
  summarise(prim_brain_body = n()) |> 
  as.data.frame()

### VIEW OUTPUT ###
Q3

```

### Q4 Find the the mean of sleep total (named mean_sleep) and the variance of sleep total (named var_sleep) grouped by `conservation` with missing values removed.

-   Your solution should be a dataframe assigned to Q4. In the Console Window the output should look something like this:

```         
  conservation mean_sleep var_sleep
1           cd    [value]   [value]
2 domesticated    [value]   [value]
3           en    [value]   [value]
4           lc    [value]   [value]
5           nt    [value]   [value]
6           vu    [value]   [value]
```

```{r}
### Do not edit the following line. It is used by CodeGrade.
# CG Q4 # 

### TYPE YOUR CODE BELOW ###

Q4 <- msleep |> 
  filter(!is.na(conservation)) |> 
  group_by(conservation) |> 
  summarise(mean_sleep = round(mean(sleep_total, na.rm = TRUE), 2), 
            var_sleep = round(var(sleep_total, na.rm = TRUE), 2)) |> 
  as.data.frame()

### VIEW OUTPUT ###
Q4

```

### Q5 List the name(s) of all the domesticated herbivores that sleep more than 12 hours.

-   Your solution should be a dataframe assigned to Q5. In the Console Window the output should look something like this:

```         
           name
1 [animal name]
...
N [animal name]
```

```{r}
### Do not edit the following line. It is used by CodeGrade.
# CG Q5 # 

### TYPE YOUR CODE BELOW ###

Q5 <- msleep |> 
  filter(vore == "herbi",
         conservation == "domesticated", 
         sleep_total > 12) |>
  select(name) |> 
  as.data.frame()
  
### VIEW OUTPUT ###
Q5

```

------------------------------------------------------------------------

# Before submitting to Code Grade:

1)  Clear objects from your environment. Click the broom in the Environment pane in the top right. This will erase any variables (like Q1, Q2) that you've stored.

2)  Rerun all your code. You can click the "Run" option above in this script pane (top right of notebook), then select "Run all". You should have all the variables stored again in the environment pane, and you should see no red error messages in the console below.

------------------------------------------------------------------------
